# --------------------- Current process for adding tests ----------------------
# 1. Create test file in tests directory, or add to already existing file
# 2. If creating new file, add to TESTS variable below.
# 3. Add instructions for how to create test. Assuming you're testing source:
#   a. Add command to create source objects first
#   b. Add to compile command all objects needed by the test
# -----------------------------------------------------------------------------

# SYNOPSIS:
#
#   make all   - makes all tests.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Don't tweak the GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR=googletest/googletest

# Where to find user code.
TEST_DIR        := ./src
TEST_BUILD_DIR  := ./build
SRC_DIR         := ../src
BUILD_DIR       := ../build

INCLUDES        := $(addprefix -I,../src)
LIBS            := $(addprefix -I,../libs)

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -std=c++20

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = base_test hex_test river_test area_test tile_test tile_map_test file_handler_test

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(wildcard $(GTEST_DIR)/include/gtest/*.h) \
                $(wildcard $(GTEST_DIR)/include/gtest/internal/*.h)

# House-keeping build targets.
all : $(TESTS)

clean :
	@rm -f $(TEST_BUILD_DIR)/*.o $(TEST_BUILD_DIR)/*.a $(TEST_BUILD_DIR)/*.exe
	@mkdir -p $(TEST_BUILD_DIR)

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
$(TEST_BUILD_DIR)/gtest-all.o : $(GTEST_SRCS_)
	@mkdir -p $(TEST_BUILD_DIR)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc -o $@

$(TEST_BUILD_DIR)/gtest_main.o : $(GTEST_SRCS_)
	@mkdir -p $(TEST_BUILD_DIR)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc -o $@

$(TEST_BUILD_DIR)/gtest.a : $(TEST_BUILD_DIR)/gtest-all.o
	@mkdir -p $(TEST_BUILD_DIR)
	$(AR) $(ARFLAGS) $@ $^

$(TEST_BUILD_DIR)/gtest_main.a : $(TEST_BUILD_DIR)/gtest-all.o $(TEST_BUILD_DIR)/gtest_main.o
	@mkdir -p $(TEST_BUILD_DIR)
	$(AR) $(ARFLAGS) $@ $^

# Building test objects
$(TEST_BUILD_DIR)/%.o: $(TEST_DIR)/%.cpp
	@mkdir -p $(TEST_BUILD_DIR)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(INCLUDES) $(LIBS) -o $@ $<

# --------------------- BUILDING TESTS ---------------------------------------- 
# A test should link with either gtest.a or gtest_main.a, depending on whether
# it defines its own main() function.

base_test : $(TEST_BUILD_DIR)/base_test.o $(TEST_BUILD_DIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $(TEST_BUILD_DIR)/$@
	$(TEST_BUILD_DIR)/$@.exe

hex_test : $(TEST_BUILD_DIR)/hex_test.o $(TEST_BUILD_DIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $(BUILD_DIR)/tiles/components/Hex.o $^ -o $(TEST_BUILD_DIR)/$@
	$(TEST_BUILD_DIR)/$@.exe

river_test : $(TEST_BUILD_DIR)/river_test.o $(TEST_BUILD_DIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread \
			$(BUILD_DIR)/portables/Transporter.o \
			$(BUILD_DIR)/tiles/components/River.o \
			$^ -o $(TEST_BUILD_DIR)/$@
	$(TEST_BUILD_DIR)/$@.exe

area_test : $(TEST_BUILD_DIR)/area_test.o $(TEST_BUILD_DIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread \
			$(BUILD_DIR)/buildings/Building.o \
			$(BUILD_DIR)/players/Player.o \
			$(BUILD_DIR)/portables/Transporter.o \
			$(BUILD_DIR)/portables/Resource_cache.o \
			$(BUILD_DIR)/tiles/components/Area.o \
			$^ -o $(TEST_BUILD_DIR)/$@
	$(TEST_BUILD_DIR)/$@.exe

tile_test : $(TEST_BUILD_DIR)/tile_test.o $(TEST_BUILD_DIR)/gtest_main.a
	$(MAKE) -C ../
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread \
			$(BUILD_DIR)/buildings/Building.o \
			$(BUILD_DIR)/portables/Transporter.o \
			$(BUILD_DIR)/portables/Resource_cache.o \
			$(BUILD_DIR)/tiles/components/Hex.o \
			$(BUILD_DIR)/tiles/components/Area.o \
			$(BUILD_DIR)/tiles/components/River.o \
			$(BUILD_DIR)/tiles/Tile.o \
			$^ -o $(TEST_BUILD_DIR)/$@
	$(TEST_BUILD_DIR)/$@.exe

tile_map_test : $(TEST_BUILD_DIR)/tile_map_test.o $(TEST_BUILD_DIR)/gtest_main.a
	$(MAKE) -C ../
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread \
			$(BUILD_DIR)/buildings/Building.o \
			$(BUILD_DIR)/portables/Transporter.o \
			$(BUILD_DIR)/portables/Resource_cache.o \
			$(BUILD_DIR)/tiles/components/Hex.o \
			$(BUILD_DIR)/tiles/components/Area.o \
			$(BUILD_DIR)/tiles/components/River.o \
			$(BUILD_DIR)/tiles/Tile.o \
			$(BUILD_DIR)/tiles/Tile_map.o \
			$^ -o $(TEST_BUILD_DIR)/$@
	$(TEST_BUILD_DIR)/$@.exe

file_handler_test : $(TEST_BUILD_DIR)/file_handler_test.o $(TEST_BUILD_DIR)/gtest_main.a
	$(MAKE) -C ../
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread \
			$(BUILD_DIR)/buildings/Building.o \
			$(BUILD_DIR)/portables/Resource_cache.o \
			$(BUILD_DIR)/tiles/components/Hex.o \
			$(BUILD_DIR)/tiles/components/River.o \
			$(BUILD_DIR)/tiles/components/Area.o \
			$(BUILD_DIR)/tiles/Tile.o \
			$^ -o $(TEST_BUILD_DIR)/$@
	$(TEST_BUILD_DIR)/$@.exe
